@model SgvToPdf.Models.ScalableVectorGraphic

@{
    ViewBag.Title = "Edit";
}

<div class="container">

    <h2>Edit for SGV</h2>


    @using (Html.BeginForm("Edit", "ScalableVectorGraphics",
        FormMethod.Post, new { enctype = "multipart/form-data", id = "sgvForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SgvSpecs, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.SgvSpecs, new { htmlAttributes = new { @class = "form-control", rows = "6" } })
                        @Html.ValidationMessageFor(model => model.SgvSpecs, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="editor-field">
                        <div>
                            <br />
                            You can Paste a sgv-xml text into the field "SVG specification" <b>or</b> Upload a  *.sgv File <br />
                            Upload a file:
                            <br />
                            <input id="fileUploader" type="file" name="Image" class="btn btn-primary btn-block btn-lg" />
                        </div>
                    </div>
                </div>

            </div>

            @Html.HiddenFor(model => model.DateCreated);



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $("#submitSGV").click(function () {
        var fileName = $("#fileUploader").val();
        if (fileName) {
            $("#SgvSpecs").val("File");

        }

    });
</script>
}


@*<div class="form-group">
    @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
    </div>
</div>*@